<?php

/**
 * Implements hook_install().
 */
function ckeditor_comment_install() {
  // Create a default type for CKEditor Comments.
  $type = new stdClass();
  $type->type = 'default';
  $type->label = 'Default';
  $type->description = 'Default CKEditor comment type.';
  $type->status = 1;
  ckeditor_comment_type_save($type);
}

/**
 * Implements hook_schema().
 */
function ckeditor_comment_schema() {
  $schema = array();

  $schema['ckeditor_comment'] = array(
    'description' => 'The base table for ckeditor_comments.',
    'fields' => array(
      'cid' => array(
        'description' => 'The primary identifier of this comment.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pid' => array(
        'description' => 'The identifier of the parent comment of this comment.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this comment.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the comment was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the comment was most recently saved.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'bookmarks' => array(
        'description' => 'The position of bookmarks for the comment inside CKEditor.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'serialize' => TRUE,
      ),
      'body' => array(
        'description' => 'The comment body.',
        'type' => 'text',
      ),
      'resolved' => array(
        'description' => 'Boolean indicating whether the comment is resolved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_type' => array(
        'description' => 'Entity type of the target entity (e.g. "node")',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_bundle' => array(
        'description' => 'Entity bundle of the target entity (e.g. "article")',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_id' => array(
        'description' => 'ID of the target entity (e.g. $node->nid).',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_vid' => array(
        'description' => 'Revision ID of the target entity (e.g. $node->vid).',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'field_name' => array(
        'description' => 'The field which the comment resides (e.g. "body").',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_summary' => array(
        'description' => 'Boolean indicating whether this comment resides in the field summary, if applicable.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('cid'),
  );

  $schema['ckeditor_comment_type'] = array(
    'description' => 'Stores information about all defined ckeditor_comment types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique ckeditor_comment type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}
